/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTest, CTestInterface } from "../CTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RoyaltyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "contentURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "royaltyPayout",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "royaltyBPS",
            type: "uint16",
          },
        ],
        internalType: "struct ICTest.TokenData",
        name: "_data",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "contentURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "royaltyPayout",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "royaltyBPS",
            type: "uint16",
          },
        ],
        internalType: "struct ICTest.TokenData",
        name: "_data",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "mintAllowlist",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
    ],
    name: "updateMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612a17806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063510b51581161010f5780638fe86b3f116100a2578063c87b56dd11610071578063c87b56dd14610435578063e985e9c514610448578063f2fde38b14610484578063fbd8d2831461049757600080fd5b80638fe86b3f146103f457806395d89b4114610407578063a22cb4651461040f578063b88d4fde1461042257600080fd5b806370a08231116100de57806370a08231146103b5578063715018a6146103c8578063847a2486146103d05780638da5cb5b146103e357600080fd5b8063510b51581461035b5780636352211e1461036e57806364e9293e14610381578063669d311c146103a257600080fd5b806323b872dd1161018757806342842e0e1161015657806342842e0e1461030f57806342966c681461032257806344dcc232146103355780634cd88b761461034857600080fd5b806323b872dd146102a057806326bd017e146102b35780632a55205a146102d45780632eb4a7ab1461030657600080fd5b8063095ea7b3116101c3578063095ea7b3146102525780630c0a9d26146102675780631cbbc6e21461027a57806321ff99701461028d57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f8366004612117565b6104aa565b60405190151581526020015b60405180910390f35b61021a6104d5565b6040516102099190612181565b61023a610235366004612194565b610567565b6040516001600160a01b039091168152602001610209565b6102656102603660046121c9565b6105f4565b005b61021a610275366004612194565b61070a565b61026561028836600461229f565b6107af565b61026561029b366004612194565b610824565b6102656102ae36600461230c565b61085a565b6102c66102c1366004612360565b61088b565b604051908152602001610209565b6102e76102e2366004612405565b610bde565b604080516001600160a01b039093168352602083019190915201610209565b6102c660c95481565b61026561031d36600461230c565b610c65565b610265610330366004612194565b610c80565b61021a610343366004612194565b610ccf565b610265610356366004612427565b610d69565b61023a610369366004612194565b610e43565b61023a61037c366004612194565b610e89565b61039461038f366004612194565b610f00565b60405161020992919061248b565b6102656103b03660046124b9565b61108e565b6102c66103c33660046124e5565b6110e9565b610265611170565b6102656103de366004612500565b6111a6565b6097546001600160a01b031661023a565b610265610402366004612544565b611422565b61021a6114f0565b61026561041d366004612581565b6114ff565b6102656104303660046125bd565b61150e565b61021a610443366004612194565b611540565b6101fd610456366004612639565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102656104923660046124e5565b611580565b61023a6104a5366004612194565b611618565b600063152a902d60e11b6001600160e01b0319831614806104cf57506104cf8261165e565b92915050565b6060606580546104e490612663565b80601f016020809104026020016040519081016040528092919081815260200182805461051090612663565b801561055d5780601f106105325761010080835404028352916020019161055d565b820191906000526020600020905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b6000610572826116ae565b6105d85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105ff82610e89565b9050806001600160a01b0316836001600160a01b0316141561066d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105cf565b336001600160a01b038216148061068957506106898133610456565b6106fb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105cf565b61070583836116cb565b505050565b600081815260cb6020526040902060010180546060919061072a90612663565b80601f016020809104026020016040519081016040528092919081815260200182805461075690612663565b80156107a35780601f10610778576101008083540402835291602001916107a3565b820191906000526020600020905b81548152906001019060200180831161078657829003601f168201915b50505050509050919050565b6097546001600160a01b031633146107d95760405162461bcd60e51b81526004016105cf90612698565b600083815260cb6020908152604090912083516107f892850190612068565b50600083815260cb60209081526040909120825161081e92600190920191840190612068565b50505050565b6097546001600160a01b0316331461084e5760405162461bcd60e51b81526004016105cf90612698565b61085781611739565b50565b6108643382611774565b6108805760405162461bcd60e51b81526004016105cf906126cd565b61070583838361185a565b600061091b6108e26108a360608701604088016124e5565b6040516bffffffffffffffffffffffff19606083901b166020820152600090603401604051602081830303815290604052805190602001209050919050565b8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506119fa92505050565b6109575760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016105cf565b61271061096a60a086016080870161271e565b61ffff16106109bb5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b60006109c660cc5490565b90506109d28682611a10565b6040805160a08101909152806109e88780612742565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602090810190610a3190880188612742565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602001610a7b60608801604089016124e5565b6001600160a01b03168152602001610a9960808801606089016124e5565b6001600160a01b03168152602001610ab760a088016080890161271e565b61ffff169052600082815260cb60209081526040909120825180519192610ae392849290910190612068565b506020828101518051610afc9260018501920190612068565b506040828101516002830180546001600160a01b039283166001600160a01b03199091161790556060808501516003909401805460809096015161ffff16600160a01b026001600160b01b0319909616949092169390931793909317909255610b6a919087019087016124e5565b6001600160a01b031681337fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca610ba08980612742565b610bad60208c018c612742565b604051610bbd94939291906127b2565b60405180910390a4610bd360cc80546001019055565b90505b949350505050565b60008080610bf46097546001600160a01b031690565b6001600160a01b03161415610c185750506097546001600160a01b03166000610c5e565b6097546001600160a01b0316600085815260cb602052604090206003015461271090610c4f90600160a01b900461ffff16866127fa565b610c599190612819565b915091505b9250929050565b6107058383836040518060200160405280600081525061150e565b610c8a3382611774565b610cc65760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420417070726f7665642160981b60448201526064016105cf565b61085781611a2a565b60ca6020526000908152604090208054610ce890612663565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1490612663565b8015610d615780601f10610d3657610100808354040283529160200191610d61565b820191906000526020600020905b815481529060010190602001808311610d4457829003601f168201915b505050505081565b600054610100900460ff16610d845760005460ff1615610d88565b303b155b610deb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105cf565b600054610100900460ff16158015610e0d576000805461ffff19166101011790555b610e178383611ac5565b610e1f611b06565b610e2d60cc80546001019055565b8015610705576000805461ff0019169055505050565b6000610e4e826116ae565b610e6a5760405162461bcd60e51b81526004016105cf9061283b565b50600090815260cb60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b0316806104cf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105cf565b606080600060cb60008581526020019081526020016000206040518060a0016040529081600082018054610f3390612663565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5f90612663565b8015610fac5780601f10610f8157610100808354040283529160200191610fac565b820191906000526020600020905b815481529060010190602001808311610f8f57829003601f168201915b50505050508152602001600182018054610fc590612663565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff190612663565b801561103e5780601f106110135761010080835404028352916020019161103e565b820191906000526020600020905b81548152906001019060200180831161102157829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b6097546001600160a01b031633146110b85760405162461bcd60e51b81526004016105cf90612698565b600091825260cb602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b0382166111545760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105cf565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b0316331461119a5760405162461bcd60e51b81526004016105cf90612698565b6111a46000611b3d565b565b6127106111b960a083016080840161271e565b61ffff161061120a5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b600061121560cc5490565b90506112218382611a10565b6040805160a08101909152806112378480612742565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060209081019061128090850185612742565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016112ca60608501604086016124e5565b6001600160a01b031681526020016112e860808501606086016124e5565b6001600160a01b0316815260200161130660a085016080860161271e565b61ffff169052600082815260cb6020908152604090912082518051919261133292849290910190612068565b50602082810151805161134b9260018501920190612068565b506040828101516002830180546001600160a01b039283166001600160a01b03199091161790556060808501516003909401805460809096015161ffff16600160a01b026001600160b01b03199096169490921693909317939093179092556113b9919084019084016124e5565b6001600160a01b031681337fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca6113ef8680612742565b6113fc6020890189612742565b60405161140c94939291906127b2565b60405180910390a461070560cc80546001019055565b8161142c816116ae565b61146f5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016105cf565b6097546001600160a01b031633146114995760405162461bcd60e51b81526004016105cf90612698565b827f459157ba24c7ab9878b165ef465fa6ae2ab42bcd8445f576be378768b0c47309836040516114c99190612181565b60405180910390a2600083815260cb60209081526040909120835161081e92850190612068565b6060606680546104e490612663565b61150a338383611b8f565b5050565b6115183383611774565b6115345760405162461bcd60e51b81526004016105cf906126cd565b61081e84848484611c5e565b606061154b826116ae565b6115675760405162461bcd60e51b81526004016105cf9061283b565b600082815260cb60205260409020805461072a90612663565b6097546001600160a01b031633146115aa5760405162461bcd60e51b81526004016105cf90612698565b6001600160a01b03811661160f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cf565b61085781611b3d565b6000611623826116ae565b61163f5760405162461bcd60e51b81526004016105cf9061283b565b50600090815260cb60205260409020600301546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b148061168f57506001600160e01b03198216635b5e139f60e01b145b806104cf57506301ffc9a760e01b6001600160e01b03198316146104cf565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061170082610e89565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60c98190556040518181527fa2bc4a36b1e221bdcc16df9d7c15559a5f4f9902519c0f92ad3198f1df005e8b9060200160405180910390a150565b600061177f826116ae565b6117e05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105cf565b60006117eb83610e89565b9050806001600160a01b0316846001600160a01b031614806118265750836001600160a01b031661181b84610567565b6001600160a01b0316145b80610bd657506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610bd6565b826001600160a01b031661186d82610e89565b6001600160a01b0316146118d55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105cf565b6001600160a01b0382166119375760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105cf565b6119426000826116cb565b6001600160a01b038316600090815260686020526040812080546001929061196b90849061288a565b90915550506001600160a01b03821660009081526068602052604081208054600192906119999084906128a1565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611a098260c95485611c91565b9392505050565b61150a828260405180602001604052806000815250611ca7565b6000611a3582610e89565b9050611a426000836116cb565b6001600160a01b0381166000908152606860205260408120805460019290611a6b90849061288a565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff16611aec5760405162461bcd60e51b81526004016105cf906128b9565b611af4611cda565b611afc611cda565b61150a8282611d01565b600054610100900460ff16611b2d5760405162461bcd60e51b81526004016105cf906128b9565b611b35611cda565b6111a4611d4f565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415611bf15760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105cf565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611c6984848461185a565b611c7584848484611d7f565b61081e5760405162461bcd60e51b81526004016105cf90612904565b600082611c9e8584611e89565b14949350505050565b611cb18383611f35565b611cbe6000848484611d7f565b6107055760405162461bcd60e51b81526004016105cf90612904565b600054610100900460ff166111a45760405162461bcd60e51b81526004016105cf906128b9565b600054610100900460ff16611d285760405162461bcd60e51b81526004016105cf906128b9565b8151611d3b906065906020850190612068565b508051610705906066906020840190612068565b600054610100900460ff16611d765760405162461bcd60e51b81526004016105cf906128b9565b6111a433611b3d565b60006001600160a01b0384163b15611e8157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611dc3903390899088908890600401612956565b602060405180830381600087803b158015611ddd57600080fd5b505af1925050508015611e0d575060408051601f3d908101601f19168201909252611e0a91810190612993565b60015b611e67573d808015611e3b576040519150601f19603f3d011682016040523d82523d6000602084013e611e40565b606091505b508051611e5f5760405162461bcd60e51b81526004016105cf90612904565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bd6565b506001610bd6565b600081815b8451811015611f2d576000858281518110611eab57611eab6129b0565b60200260200101519050808311611eed576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250611f1a565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080611f25816129c6565b915050611e8e565b509392505050565b6001600160a01b038216611f8b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105cf565b611f94816116ae565b15611fe15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105cf565b6001600160a01b038216600090815260686020526040812080546001929061200a9084906128a1565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461207490612663565b90600052602060002090601f01602090048101928261209657600085556120dc565b82601f106120af57805160ff19168380011785556120dc565b828001600101855582156120dc579182015b828111156120dc5782518255916020019190600101906120c1565b506120e89291506120ec565b5090565b5b808211156120e857600081556001016120ed565b6001600160e01b03198116811461085757600080fd5b60006020828403121561212957600080fd5b8135611a0981612101565b6000815180845260005b8181101561215a5760208185018101518683018201520161213e565b8181111561216c576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611a096020830184612134565b6000602082840312156121a657600080fd5b5035919050565b80356001600160a01b03811681146121c457600080fd5b919050565b600080604083850312156121dc57600080fd5b6121e5836121ad565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612224576122246121f3565b604051601f8501601f19908116603f0116810190828211818310171561224c5761224c6121f3565b8160405280935085815286868601111561226557600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261229057600080fd5b611a0983833560208501612209565b6000806000606084860312156122b457600080fd5b83359250602084013567ffffffffffffffff808211156122d357600080fd5b6122df8783880161227f565b935060408601359150808211156122f557600080fd5b506123028682870161227f565b9150509250925092565b60008060006060848603121561232157600080fd5b61232a846121ad565b9250612338602085016121ad565b9150604084013590509250925092565b600060a0828403121561235a57600080fd5b50919050565b6000806000806060858703121561237657600080fd5b61237f856121ad565b9350602085013567ffffffffffffffff8082111561239c57600080fd5b6123a888838901612348565b945060408701359150808211156123be57600080fd5b818701915087601f8301126123d257600080fd5b8135818111156123e157600080fd5b8860208260051b85010111156123f657600080fd5b95989497505060200194505050565b6000806040838503121561241857600080fd5b50508035926020909101359150565b6000806040838503121561243a57600080fd5b823567ffffffffffffffff8082111561245257600080fd5b61245e8683870161227f565b9350602085013591508082111561247457600080fd5b506124818582860161227f565b9150509250929050565b60408152600061249e6040830185612134565b82810360208401526124b08185612134565b95945050505050565b600080604083850312156124cc57600080fd5b823591506124dc602084016121ad565b90509250929050565b6000602082840312156124f757600080fd5b611a09826121ad565b6000806040838503121561251357600080fd5b61251c836121ad565b9150602083013567ffffffffffffffff81111561253857600080fd5b61248185828601612348565b6000806040838503121561255757600080fd5b82359150602083013567ffffffffffffffff81111561257557600080fd5b6124818582860161227f565b6000806040838503121561259457600080fd5b61259d836121ad565b9150602083013580151581146125b257600080fd5b809150509250929050565b600080600080608085870312156125d357600080fd5b6125dc856121ad565b93506125ea602086016121ad565b925060408501359150606085013567ffffffffffffffff81111561260d57600080fd5b8501601f8101871361261e57600080fd5b61262d87823560208401612209565b91505092959194509250565b6000806040838503121561264c57600080fd5b612655836121ad565b91506124dc602084016121ad565b600181811c9082168061267757607f821691505b6020821081141561235a57634e487b7160e01b600052602260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60006020828403121561273057600080fd5b813561ffff81168114611a0957600080fd5b6000808335601e1984360301811261275957600080fd5b83018035915067ffffffffffffffff82111561277457600080fd5b602001915036819003821315610c5e57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6040815260006127c6604083018688612789565b82810360208401526127d9818587612789565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612814576128146127e4565b500290565b60008261283657634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60008282101561289c5761289c6127e4565b500390565b600082198211156128b4576128b46127e4565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061298990830184612134565b9695505050505050565b6000602082840312156129a557600080fd5b8151611a0981612101565b634e487b7160e01b600052603260045260246000fd5b60006000198214156129da576129da6127e4565b506001019056fea26469706673582212200cf95960d5113fe2e6c3e57689a9c7046782d131d5f259ca38c291358ef7d7cf64736f6c63430008090033";

export class CTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTest> {
    return super.deploy(overrides || {}) as Promise<CTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTest {
    return super.attach(address) as CTest;
  }
  connect(signer: Signer): CTest__factory {
    return super.connect(signer) as CTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTestInterface {
    return new utils.Interface(_abi) as CTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CTest {
    return new Contract(address, _abi, signerOrProvider) as CTest;
  }
}
