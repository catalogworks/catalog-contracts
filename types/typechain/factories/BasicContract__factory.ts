/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BasicContract, BasicContractInterface } from "../BasicContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600d81526c18985cda58d0dbdb9d1c9858dd609a1b6020808301918252835180850190945260038452621090d560ea1b908401528151919291620000629160009162000081565b5080516200007890600190602084019062000081565b50505062000164565b8280546200008f9062000127565b90600052602060002090601f016020900481019282620000b35760008555620000fe565b82601f10620000ce57805160ff1916838001178555620000fe565b82800160010185558215620000fe579182015b82811115620000fe578251825591602001919060010190620000e1565b506200010c92915062000110565b5090565b5b808211156200010c576000815560010162000111565b600181811c908216806200013c57607f821691505b602082108114156200015e57634e487b7160e01b600052602260045260246000fd5b50919050565b61186980620001746000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806342842e0e116100a257806395d89b411161007157806395d89b4114610224578063a22cb4651461022c578063b88d4fde1461023f578063c87b56dd14610252578063e985e9c51461026557600080fd5b806342842e0e146101d85780634f6ccce7146101eb5780636352211e146101fe57806370a082311461021157600080fd5b806318160ddd116100de57806318160ddd1461018d57806323b872dd1461019f5780632f745c59146101b257806340d097c3146101c557600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004611363565b6102a1565b60405190151581526020015b60405180910390f35b6101406102b2565b60405161012f91906113d8565b61016061015b3660046113eb565b610344565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611420565b6103de565b005b6008545b60405190815260200161012f565b61018b6101ad36600461144a565b6104f4565b6101916101c0366004611420565b610525565b61018b6101d3366004611486565b6105bb565b61018b6101e636600461144a565b6105e4565b6101916101f93660046113eb565b6105ff565b61016061020c3660046113eb565b610692565b61019161021f366004611486565b610709565b610140610790565b61018b61023a3660046114a1565b61079f565b61018b61024d3660046114f3565b6107aa565b6101406102603660046113eb565b6107e2565b6101236102733660046115cf565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006102ac826108ca565b92915050565b6060600080546102c190611602565b80601f01602080910402602001604051908101604052809291908181526020018280546102ed90611602565b801561033a5780601f1061030f5761010080835404028352916020019161033a565b820191906000526020600020905b81548152906001019060200180831161031d57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103c25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103e982610692565b9050806001600160a01b0316836001600160a01b031614156104575760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103b9565b336001600160a01b038216148061047357506104738133610273565b6104e55760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103b9565b6104ef83836108ef565b505050565b6104fe338261095d565b61051a5760405162461bcd60e51b81526004016103b99061163d565b6104ef838383610a54565b600061053083610709565b82106105925760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103b9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b60006105c6600a5490565b90506105d6600a80546001019055565b6105e08282610bff565b5050565b6104ef838383604051806020016040528060008152506107aa565b600061060a60085490565b821061066d5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103b9565b600882815481106106805761068061168e565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102ac5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103b9565b60006001600160a01b0382166107745760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103b9565b506001600160a01b031660009081526003602052604090205490565b6060600180546102c190611602565b6105e0338383610c19565b6107b4338361095d565b6107d05760405162461bcd60e51b81526004016103b99061163d565b6107dc84848484610ce8565b50505050565b6000818152600260205260409020546060906001600160a01b03166108615760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103b9565b600061087860408051602081019091526000815290565b9050600081511161089857604051806020016040528060008152506108c3565b806108a284610d1b565b6040516020016108b39291906116a4565b6040516020818303038152906040525b9392505050565b60006001600160e01b0319821663780e9d6360e01b14806102ac57506102ac82610e19565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061092482610692565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166109d65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103b9565b60006109e183610692565b9050806001600160a01b0316846001600160a01b03161480610a1c5750836001600160a01b0316610a1184610344565b6001600160a01b0316145b80610a4c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610a6782610692565b6001600160a01b031614610acf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103b9565b6001600160a01b038216610b315760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103b9565b610b3c838383610e69565b610b476000826108ef565b6001600160a01b0383166000908152600360205260408120805460019290610b709084906116e9565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b9e908490611700565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6105e0828260405180602001604052806000815250610e74565b816001600160a01b0316836001600160a01b03161415610c7b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103b9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610cf3848484610a54565b610cff84848484610ea7565b6107dc5760405162461bcd60e51b81526004016103b990611718565b606081610d3f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d695780610d538161176a565b9150610d629050600a8361179b565b9150610d43565b60008167ffffffffffffffff811115610d8457610d846114dd565b6040519080825280601f01601f191660200182016040528015610dae576020820181803683370190505b5090505b8415610a4c57610dc36001836116e9565b9150610dd0600a866117af565b610ddb906030611700565b60f81b818381518110610df057610df061168e565b60200101906001600160f81b031916908160001a905350610e12600a8661179b565b9450610db2565b60006001600160e01b031982166380ac58cd60e01b1480610e4a57506001600160e01b03198216635b5e139f60e01b145b806102ac57506301ffc9a760e01b6001600160e01b03198316146102ac565b6104ef838383610fb4565b610e7e838361106c565b610e8b6000848484610ea7565b6104ef5760405162461bcd60e51b81526004016103b990611718565b60006001600160a01b0384163b15610fa957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610eeb9033908990889088906004016117c3565b602060405180830381600087803b158015610f0557600080fd5b505af1925050508015610f35575060408051601f3d908101601f19168201909252610f3291810190611800565b60015b610f8f573d808015610f63576040519150601f19603f3d011682016040523d82523d6000602084013e610f68565b606091505b508051610f875760405162461bcd60e51b81526004016103b990611718565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a4c565b506001949350505050565b6001600160a01b03831661100f5761100a81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611032565b816001600160a01b0316836001600160a01b0316146110325761103283826111ba565b6001600160a01b038216611049576104ef81611257565b826001600160a01b0316826001600160a01b0316146104ef576104ef8282611306565b6001600160a01b0382166110c25760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103b9565b6000818152600260205260409020546001600160a01b0316156111275760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103b9565b61113360008383610e69565b6001600160a01b038216600090815260036020526040812080546001929061115c908490611700565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016111c784610709565b6111d191906116e9565b600083815260076020526040902054909150808214611224576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611269906001906116e9565b600083815260096020526040812054600880549394509092849081106112915761129161168e565b9060005260206000200154905080600883815481106112b2576112b261168e565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806112ea576112ea61181d565b6001900381819060005260206000200160009055905550505050565b600061131183610709565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b03198116811461136057600080fd5b50565b60006020828403121561137557600080fd5b81356108c38161134a565b60005b8381101561139b578181015183820152602001611383565b838111156107dc5750506000910152565b600081518084526113c4816020860160208601611380565b601f01601f19169290920160200192915050565b6020815260006108c360208301846113ac565b6000602082840312156113fd57600080fd5b5035919050565b80356001600160a01b038116811461141b57600080fd5b919050565b6000806040838503121561143357600080fd5b61143c83611404565b946020939093013593505050565b60008060006060848603121561145f57600080fd5b61146884611404565b925061147660208501611404565b9150604084013590509250925092565b60006020828403121561149857600080fd5b6108c382611404565b600080604083850312156114b457600080fd5b6114bd83611404565b9150602083013580151581146114d257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561150957600080fd5b61151285611404565b935061152060208601611404565b925060408501359150606085013567ffffffffffffffff8082111561154457600080fd5b818701915087601f83011261155857600080fd5b81358181111561156a5761156a6114dd565b604051601f8201601f19908116603f01168101908382118183101715611592576115926114dd565b816040528281528a60208487010111156115ab57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156115e257600080fd5b6115eb83611404565b91506115f960208401611404565b90509250929050565b600181811c9082168061161657607f821691505b6020821081141561163757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600083516116b6818460208801611380565b8351908301906116ca818360208801611380565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156116fb576116fb6116d3565b500390565b60008219821115611713576117136116d3565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060001982141561177e5761177e6116d3565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826117aa576117aa611785565b500490565b6000826117be576117be611785565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117f6908301846113ac565b9695505050505050565b60006020828403121561181257600080fd5b81516108c38161134a565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ebaf71f2a487bf8f2c9d5f007d50f45d84699ab02e3634f3f0cd73372c54bc0f64736f6c63430008090033";

export class BasicContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BasicContract> {
    return super.deploy(overrides || {}) as Promise<BasicContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BasicContract {
    return super.attach(address) as BasicContract;
  }
  connect(signer: Signer): BasicContract__factory {
    return super.connect(signer) as BasicContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicContractInterface {
    return new utils.Interface(_abi) as BasicContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicContract {
    return new Contract(address, _abi, signerOrProvider) as BasicContract;
  }
}
